name: Update Grammar Index

on:
  push:
    branches:
      - main
    paths:
      - 'grammar/**'

jobs:
  update-index:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Create grammar-points.json
        run: |
          node <<'EOF'
          const fs = require('fs');
          const path = require('path');

          // Read all .md files from grammar directory
          const grammarDir = 'grammar';
          const files = fs.readdirSync(grammarDir)
            .filter(file => 
              file.endsWith('.md') && 
              !['index.md', 'marksheet.md', 'basic_grammar_points.md'].includes(file)
            );

          const grammarPoints = files.map(file => {
            const content = fs.readFileSync(path.join(grammarDir, file), 'utf8');
            
            // Extract title and description
            const titleMatch = content.match(/^# ([^\n]+)/m);
            const descMatch = content.match(/^## 基本意义\s*([^\n]+)/m) || 
                            content.match(/^## 意义\s*([^\n]+)/m) ||
                            content.match(/^## 含义\s*([^\n]+)/m);
            
            const id = file.replace('.md', '');
            const title = titleMatch ? titleMatch[1].trim() : id;
            const description = descMatch ? descMatch[1].trim() : '';

            return {
              id,
              title,
              description,
              path: `/grammar/${id}`
            };
          });

          // Sort grammar points by ID
          grammarPoints.sort((a, b) => a.id.localeCompare(b.id));

          const json = {
            grammar_points: grammarPoints,
            last_updated: new Date().toISOString(),
            total_count: grammarPoints.length
          };

          // Create json string with proper formatting
          const jsonContent = JSON.stringify(json, null, 2);

          // Store the content
          fs.writeFileSync('grammar-points.json', jsonContent);
          EOF

      - name: Checkout gh-pages
        uses: actions/checkout@v3
        with:
          ref: gh-pages
          clean: false

      - name: Update grammar-points.json
        run: |
          mkdir -p docs
          mv grammar-points.json docs/
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git add docs/grammar-points.json
          git commit -m "Update grammar-points.json with all grammar points" || echo "No changes to commit"
          git push origin gh-pages